/*
 * This file is generated by jOOQ.
 */
package com.packt.serverless.kotlin.letspoll.models.generated;


import com.packt.serverless.kotlin.letspoll.models.generated.tables.Poll;
import com.packt.serverless.kotlin.letspoll.models.generated.tables.Respondent;
import com.packt.serverless.kotlin.letspoll.models.generated.tables.RespondentPollResponse;
import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {"http://www.jooq.org", "jOOQ version:3.11.2"},
    comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"}) public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1191462490;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.poll</code>.
     */
    public final Poll POLL = Poll.POLL;

    /**
     * The table <code>public.respondent</code>.
     */
    public final Respondent RESPONDENT = Respondent.RESPONDENT;

    /**
     * The table <code>public.respondent_poll_response</code>.
     */
    public final RespondentPollResponse RESPONDENT_POLL_RESPONSE =
        RespondentPollResponse.RESPONDENT_POLL_RESPONSE;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(Sequences.POLL_A_POLL_ID_SEQ,
            Sequences.RESPONDENT_A_RESPONDENT_ID_SEQ,
            Sequences.RESPONDENT_POLL_RESPONSE_A_RESPONDENT_POLL_RESPONSE_ID_SEQ);
    }

    @Override public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(Poll.POLL, Respondent.RESPONDENT,
            RespondentPollResponse.RESPONDENT_POLL_RESPONSE);
    }
}
